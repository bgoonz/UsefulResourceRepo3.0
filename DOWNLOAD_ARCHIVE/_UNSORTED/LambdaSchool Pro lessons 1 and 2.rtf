{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf470
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww12600\viewh10200\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\b\fs32 \cf0 LambdaSchool Pro
\b0\fs28 \
\
\ul Lesson 1: React\ulnone \
\
video: https://www.youtube.com/watch?v=7QwRtGtluJk\
homework: https://github.com/SunJieMing/LS-Pro-React-I\
\
video timestamps:\
01:07 - JSBin\
01:44 - new ES6 features\
- 02:05 - let vs. const\
- 02:51 - block scoping\
- 07:49 - creating classes\
- 09:16 - example: using \'93class\'94 with a constructor\
- 11:50 - using backticks with strings instead of concatenation\
13:23 - React portion of tonight\'92s class begins\
13:40 - installing & initiating \'93create-react-app\'94\
17:14 - concept of React components\
18:32 - visual structure of a React app\
19:58 - brief description of the DOM\
20:18 - first look at App.js file\
20:47 - React file structure setup: importing & exporting\
25:00 - looking at the actual React-specific code\
26:56 - introducing JSX\
29:39 - creating first component: nav bar\
- 31:50 - \'93className\'94 instead of \'93class\'94\
- 34:06 - importing newly created component to App.js file\
- 35:26 - Ben\'92s love-hate relationship with \'93whitesmoke\'94: The Saga Begins\
35:46 - creating next component: navbar button\
39:06 - passing your own attributes to components\
	<ComponentName text=\{\'91text here\'92\} />\
	\{this.props.text\}\
42:36 - review of what we covered today\
\
\ul Lesson 2: React, ctd.\ulnone \
\
video: https://www.youtube.com/watch?v=FQPowZglpJA\
homework: https://github.com/SunJieMing/LS-Pro-React-II/\
\
video timestamps:\
00:36 - more new ES6 features\
- 01:41 - babeljs.io\
- 02:36 - arrow functions  =>\
- 04:36 - another arrow function example; review of .map\
- 08:22 - \'93this\'94 inside an arrow function is NOT set to the function\'92s scope, but rather one level above it! (different from normal functions)\
- 10:24 - binding\
14:43 - opening up example React app for today\
15:41 - introduction to the concept of \'93state\'94\
17:00 - example: starting to build a counter\
18:02 - making a sample \'93dumb\'94 (\'93functional\'94) component: Header.js\
19:53 - Ben\'92s love-hate relationship with \'93whitesmoke\'94: The Saga Continues\
20:43 - how to write a component as a function (instead of a class) to simplify the code\
- 22:05 - changing title text using \'93props\'94\
23:54 - making a stateful component\
26:40 - creating the Counter component\
28:09 - making state object with \'93constructor\'94 method\
31:12 - adding increment functionality to counter (by adding custom method to class)\
32:50 - onClick property \'96\'a0how to specify what happens when an event occurs\
33:41 - the return of binding! (in order to make incrementCount work)\
37:00 - Ben shows us how to get his pretty Sublime formatting\
38:10 - changing state; how to update our counter?\
39:00 - we have to re-render the HTML in order to reflect the fact that our counter is incrementing\
39:31 - pass new state object to setState method in order to update old state\
42:42 - more info about how to use setState; setState is asynchronous\
45:35 - updating the time with \'93new Date()\'94\
}