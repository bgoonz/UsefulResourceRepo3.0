{
  "expireTime": 9007200887118514000,
  "key": "transformer-remark-markdown-html-fa130a9bfe68dac96ec1d698dc801810-gatsby-remark-autolink-headersgatsby-remark-prismjs-",
  "val": "<h1 id=\"scripts7\" style=\"position:relative;\"><a href=\"#scripts7\" aria-label=\"scripts7 permalink\" class=\"header-link-class before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>scripts(7)</h1>\n<h2 id=\"how-npm-handles-the-scripts-field\" style=\"position:relative;\"><a href=\"#how-npm-handles-the-scripts-field\" aria-label=\"how npm handles the scripts field permalink\" class=\"header-link-class before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>How npm handles the \"scripts\" field</h2>\n<h3 id=\"description\" style=\"position:relative;\"><a href=\"#description\" aria-label=\"description permalink\" class=\"header-link-class before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Description</h3>\n<p>The <code class=\"language-text\">&quot;scripts&quot;</code> property of of your <code class=\"language-text\">package.json</code> file supports a number of built-in scripts and their preset life cycle events as well as arbitrary scripts. These all can be executed by running <code class=\"language-text\">npm run-script &lt;stage&gt;</code> or <code class=\"language-text\">npm run &lt;stage&gt;</code> for short. <em>Pre</em> and <em>post</em> commands with matching names will be run for those as well (e.g. <code class=\"language-text\">premyscript</code>, <code class=\"language-text\">myscript</code>, <code class=\"language-text\">postmyscript</code>). Scripts from dependencies can be run with <code class=\"language-text\">npm explore &lt;pkg&gt; -- npm run &lt;stage&gt;</code>.</p>\n<h3 id=\"pre--post-scripts\" style=\"position:relative;\"><a href=\"#pre--post-scripts\" aria-label=\"pre  post scripts permalink\" class=\"header-link-class before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Pre &#x26; Post Scripts</h3>\n<p>To create \"pre\" or \"post\" scripts for any scripts defined in the <code class=\"language-text\">&quot;scripts&quot;</code> section of the <code class=\"language-text\">package.json</code>, simply create another script <em>with a matching name</em> and add \"pre\" or \"post\" to the beginning of them.</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"precompress\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"{{ executes BEFORE the `compress` script }}\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"compress\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"{{ run command to compress files }}\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"postcompress\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"{{ executes AFTER `compress` script }}\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"life-cycle-scripts\" style=\"position:relative;\"><a href=\"#life-cycle-scripts\" aria-label=\"life cycle scripts permalink\" class=\"header-link-class before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Life Cycle Scripts</h3>\n<p>There are some special life cycle scripts that happen only in certain situations. These scripts happen in addtion to the \"pre\" and \"post\" script.</p>\n<ul>\n<li><code class=\"language-text\">prepare</code>, <code class=\"language-text\">prepublish</code>, <code class=\"language-text\">prepublishOnly</code>, <code class=\"language-text\">prepack</code>, <code class=\"language-text\">postpack</code></li>\n</ul>\n<p><strong>prepare</strong> (since <code class=\"language-text\">npm@4.0.0</code>)</p>\n<ul>\n<li>Runs BEFORE the package is packed</li>\n<li>Runs BEFORE the package is published</li>\n<li>Runs on local <code class=\"language-text\">npm install</code> without any arguments</li>\n<li>Run AFTER <code class=\"language-text\">prepublish</code>, but BEFORE <code class=\"language-text\">prepublishOnly</code></li>\n<li>NOTE: If a package being installed through git contains a <code class=\"language-text\">prepare</code> script, its <code class=\"language-text\">dependencies</code> and <code class=\"language-text\">devDependencies</code> will be installed, and the prepare script will be run, before the package is packaged and installed.</li>\n</ul>\n<p><strong>prepublish</strong> (DEPRECATED)</p>\n<ul>\n<li>Same as <code class=\"language-text\">prepare</code></li>\n</ul>\n<p><strong>prepublishOnly</strong></p>\n<ul>\n<li>Runs BEFORE the package is prepared and packed, ONLY on <code class=\"language-text\">npm publish</code>.</li>\n</ul>\n<p><strong>prepack</strong></p>\n<ul>\n<li>Runs BEFORE a tarball is packed (on \"<code class=\"language-text\">npm pack</code>\", \"<code class=\"language-text\">npm publish</code>\", and when installing a git dependencies).</li>\n<li>NOTE: \"<code class=\"language-text\">npm run pack</code>\" is NOT the same as \"<code class=\"language-text\">npm pack</code>\". \"<code class=\"language-text\">npm run pack</code>\" is an arbitrary user defined script name, where as, \"<code class=\"language-text\">npm pack</code>\" is a CLI defined command.</li>\n</ul>\n<p><strong>postpack</strong></p>\n<ul>\n<li>Runs AFTER the tarball has been generated and moved to its final destination.</li>\n</ul>\n<h4 id=\"prepare-and-prepublish\" style=\"position:relative;\"><a href=\"#prepare-and-prepublish\" aria-label=\"prepare and prepublish permalink\" class=\"header-link-class before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Prepare and Prepublish</h4>\n<p><strong>Deprecation Note: prepublish</strong></p>\n<p>Since <code class=\"language-text\">npm@1.1.71</code>, the npm CLI has run the <code class=\"language-text\">prepublish</code> script for both <code class=\"language-text\">npm publish</code> and <code class=\"language-text\">npm install</code>, because it's a convenient way to prepare a package for use (some common use cases are described in the section below). It has also turned out to be, in practice, <a href=\"https://github.com/npm/npm/issues/10074\">very confusing</a>. As of <code class=\"language-text\">npm@4.0.0</code>, a new event has been introduced, <code class=\"language-text\">prepare</code>, that preserves this existing behavior. A <em>new</em> event, <code class=\"language-text\">prepublishOnly</code> has been added as a transitional strategy to allow users to avoid the confusing behavior of existing npm versions and only run on <code class=\"language-text\">npm publish</code> (for instance, running the tests one last time to ensure they're in good shape).</p>\n<p>See <a href=\"https://github.com/npm/npm/issues/10074\">https://github.com/npm/npm/issues/10074</a> for a much lengthier justification, with further reading, for this change.</p>\n<p><strong>Use Cases</strong></p>\n<p>If you need to perform operations on your package before it is used, in a way that is not dependent on the operating system or architecture of the target system, use a <code class=\"language-text\">prepublish</code> script. This includes tasks such as:</p>\n<ul>\n<li>Compiling CoffeeScript source code into JavaScript.</li>\n<li>Creating minified versions of JavaScript source code.</li>\n<li>Fetching remote resources that your package will use.</li>\n</ul>\n<p>The advantage of doing these things at <code class=\"language-text\">prepublish</code> time is that they can be done once, in a single place, thus reducing complexity and variability. Additionally, this means that:</p>\n<ul>\n<li>You can depend on <code class=\"language-text\">coffee-script</code> as a <code class=\"language-text\">devDependency</code>, and thus\nyour users don't need to have it installed.</li>\n<li>You don't need to include minifiers in your package, reducing\nthe size for your users.</li>\n<li>You don't need to rely on your users having <code class=\"language-text\">curl</code> or <code class=\"language-text\">wget</code> or\nother system tools on the target machines.</li>\n</ul>\n<h3 id=\"life-cycle-operation-order\" style=\"position:relative;\"><a href=\"#life-cycle-operation-order\" aria-label=\"life cycle operation order permalink\" class=\"header-link-class before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Life Cycle Operation Order</h3>\n<h4 id=\"npm-publish\" style=\"position:relative;\"><a href=\"#npm-publish\" aria-label=\"npm publish permalink\" class=\"header-link-class before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"/cli-commands/npm-publish\"><code class=\"language-text\">npm publish</code></a></h4>\n<ul>\n<li><code class=\"language-text\">prepublishOnly</code></li>\n<li><code class=\"language-text\">prepare</code></li>\n<li><code class=\"language-text\">prepublish</code></li>\n<li><code class=\"language-text\">publish</code></li>\n<li><code class=\"language-text\">postpublish</code></li>\n</ul>\n<h4 id=\"npm-pack\" style=\"position:relative;\"><a href=\"#npm-pack\" aria-label=\"npm pack permalink\" class=\"header-link-class before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"/cli-commands/npm-pack\"><code class=\"language-text\">npm pack</code></a></h4>\n<ul>\n<li><code class=\"language-text\">prepack</code></li>\n<li><code class=\"language-text\">postpack</code></li>\n</ul>\n<h4 id=\"npm-install\" style=\"position:relative;\"><a href=\"#npm-install\" aria-label=\"npm install permalink\" class=\"header-link-class before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"/cli-commands/npm-install\"><code class=\"language-text\">npm install</code></a></h4>\n<ul>\n<li><code class=\"language-text\">preinstall</code></li>\n<li><code class=\"language-text\">install</code></li>\n<li><code class=\"language-text\">postinstall</code></li>\n</ul>\n<p>Also triggers</p>\n<ul>\n<li><code class=\"language-text\">prepublish</code> (when on local)</li>\n<li><code class=\"language-text\">prepare</code> (when on local)</li>\n</ul>\n<h4 id=\"npm-start\" style=\"position:relative;\"><a href=\"#npm-start\" aria-label=\"npm start permalink\" class=\"header-link-class before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"/cli-commands/npm-start\"><code class=\"language-text\">npm start</code></a></h4>\n<p><code class=\"language-text\">npm run start</code> has an <code class=\"language-text\">npm start</code> shorthand.</p>\n<ul>\n<li><code class=\"language-text\">prestart</code></li>\n<li><code class=\"language-text\">start</code></li>\n<li><code class=\"language-text\">poststart</code></li>\n</ul>\n<h3 id=\"default-values\" style=\"position:relative;\"><a href=\"#default-values\" aria-label=\"default values permalink\" class=\"header-link-class before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Default Values</h3>\n<p>npm will default some script values based on package contents.</p>\n<ul>\n<li>\n<p><code class=\"language-text\">&quot;start&quot;: &quot;node server.js&quot;</code>:</p>\n<p>If there is a <code class=\"language-text\">server.js</code> file in the root of your package, then npm\nwill default the <code class=\"language-text\">start</code> command to <code class=\"language-text\">node server.js</code>.</p>\n</li>\n<li>\n<p><code class=\"language-text\">&quot;install&quot;: &quot;node-gyp rebuild&quot;</code>:</p>\n<p>If there is a <code class=\"language-text\">binding.gyp</code> file in the root of your package and you\nhaven't defined your own <code class=\"language-text\">install</code> or <code class=\"language-text\">preinstall</code> scripts, npm will\ndefault the <code class=\"language-text\">install</code> command to compile using node-gyp.</p>\n</li>\n</ul>\n<h3 id=\"user\" style=\"position:relative;\"><a href=\"#user\" aria-label=\"user permalink\" class=\"header-link-class before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>User</h3>\n<p>If npm was invoked with root privileges, then it will change the uid\nto the user account or uid specified by the <code class=\"language-text\">user</code> config, which\ndefaults to <code class=\"language-text\">nobody</code>. Set the <code class=\"language-text\">unsafe-perm</code> flag to run scripts with\nroot privileges.</p>\n<h3 id=\"environment\" style=\"position:relative;\"><a href=\"#environment\" aria-label=\"environment permalink\" class=\"header-link-class before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Environment</h3>\n<p>Package scripts run in an environment where many pieces of information\nare made available regarding the setup of npm and the current state of\nthe process.</p>\n<h4 id=\"path\" style=\"position:relative;\"><a href=\"#path\" aria-label=\"path permalink\" class=\"header-link-class before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>path</h4>\n<p>If you depend on modules that define executable scripts, like test\nsuites, then those executables will be added to the <code class=\"language-text\">PATH</code> for\nexecuting the scripts. So, if your package.json has this:</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"foo\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"dependencies\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"bar\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"0.1.x\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"start\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"bar ./test\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>then you could run <code class=\"language-text\">npm start</code> to execute the <code class=\"language-text\">bar</code> script, which is\nexported into the <code class=\"language-text\">node_modules/.bin</code> directory on <code class=\"language-text\">npm install</code>.</p>\n<h4 id=\"packagejson-vars\" style=\"position:relative;\"><a href=\"#packagejson-vars\" aria-label=\"packagejson vars permalink\" class=\"header-link-class before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>package.json vars</h4>\n<p>The package.json fields are tacked onto the <code class=\"language-text\">npm_package_</code> prefix. So,\nfor instance, if you had <code class=\"language-text\">{&quot;name&quot;:&quot;foo&quot;, &quot;version&quot;:&quot;1.2.5&quot;}</code> in your\npackage.json file, then your package scripts would have the\n<code class=\"language-text\">npm_package_name</code> environment variable set to \"foo\", and the\n<code class=\"language-text\">npm_package_version</code> set to \"1.2.5\". You can access these variables\nin your code with <code class=\"language-text\">process.env.npm_package_name</code> and\n<code class=\"language-text\">process.env.npm_package_version</code>, and so on for other fields.</p>\n<h4 id=\"configuration\" style=\"position:relative;\"><a href=\"#configuration\" aria-label=\"configuration permalink\" class=\"header-link-class before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>configuration</h4>\n<p>Configuration parameters are put in the environment with the\n<code class=\"language-text\">npm_config_</code> prefix. For instance, you can view the effective <code class=\"language-text\">root</code>\nconfig by checking the <code class=\"language-text\">npm_config_root</code> environment variable.</p>\n<h4 id=\"special-packagejson-config-object\" style=\"position:relative;\"><a href=\"#special-packagejson-config-object\" aria-label=\"special packagejson config object permalink\" class=\"header-link-class before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Special: package.json \"config\" object</h4>\n<p>The package.json \"config\" keys are overwritten in the environment if\nthere is a config param of <code class=\"language-text\">&lt;name&gt;[@&lt;version&gt;]:&lt;key&gt;</code>. For example,\nif the package.json has this:</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"foo\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"config\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"port\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"8080\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"start\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"node server.js\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>and the server.js is this:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">http<span class=\"token punctuation\">.</span><span class=\"token function\">createServer</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span>process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span>npm_package_config_port<span class=\"token punctuation\">)</span></code></pre></div>\n<p>then the user could change the behavior by doing:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">  <span class=\"token function\">npm</span> config <span class=\"token builtin class-name\">set</span> foo:port <span class=\"token number\">80</span></code></pre></div>\n<h4 id=\"current-lifecycle-event\" style=\"position:relative;\"><a href=\"#current-lifecycle-event\" aria-label=\"current lifecycle event permalink\" class=\"header-link-class before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>current lifecycle event</h4>\n<p>Lastly, the <code class=\"language-text\">npm_lifecycle_event</code> environment variable is set to\nwhichever stage of the cycle is being executed. So, you could have a\nsingle script used for different parts of the process which switches\nbased on what's currently happening.</p>\n<p>Objects are flattened following this format, so if you had\n<code class=\"language-text\">{&quot;scripts&quot;:{&quot;install&quot;:&quot;foo.js&quot;}}</code> in your package.json, then you'd\nsee this in the script:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">process.env.npm_package_scripts_install <span class=\"token operator\">==</span><span class=\"token operator\">=</span> <span class=\"token string\">\"foo.js\"</span></code></pre></div>\n<h3 id=\"examples\" style=\"position:relative;\"><a href=\"#examples\" aria-label=\"examples permalink\" class=\"header-link-class before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Examples</h3>\n<p>For example, if your package.json contains this:</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"install\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"scripts/install.js\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"postinstall\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"scripts/install.js\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"uninstall\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"scripts/uninstall.js\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>then <code class=\"language-text\">scripts/install.js</code> will be called for the install\nand post-install stages of the lifecycle, and <code class=\"language-text\">scripts/uninstall.js</code>\nwill be called when the package is uninstalled. Since\n<code class=\"language-text\">scripts/install.js</code> is running for two different phases, it would\nbe wise in this case to look at the <code class=\"language-text\">npm_lifecycle_event</code> environment\nvariable.</p>\n<p>If you want to run a make command, you can do so. This works just\nfine:</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"preinstall\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"./configure\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"install\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"make &amp;&amp; make install\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"test\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"make test\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"exiting\" style=\"position:relative;\"><a href=\"#exiting\" aria-label=\"exiting permalink\" class=\"header-link-class before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Exiting</h3>\n<p>Scripts are run by passing the line as a script argument to <code class=\"language-text\">sh</code>.</p>\n<p>If the script exits with a code other than 0, then this will abort the\nprocess.</p>\n<p>Note that these script files don't have to be nodejs or even\njavascript programs. They just have to be some kind of executable\nfile.</p>\n<h3 id=\"hook-scripts\" style=\"position:relative;\"><a href=\"#hook-scripts\" aria-label=\"hook scripts permalink\" class=\"header-link-class before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Hook Scripts</h3>\n<p>If you want to run a specific script at a specific lifecycle event for\nALL packages, then you can use a hook script.</p>\n<p>Place an executable file at <code class=\"language-text\">node_modules/.hooks/{eventname}</code>, and\nit'll get run for all packages when they are going through that point\nin the package lifecycle for any packages installed in that root.</p>\n<p>Hook scripts are run exactly the same way as package.json scripts.\nThat is, they are in a separate child process, with the env described\nabove.</p>\n<h3 id=\"best-practices\" style=\"position:relative;\"><a href=\"#best-practices\" aria-label=\"best practices permalink\" class=\"header-link-class before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Best Practices</h3>\n<ul>\n<li>Don't exit with a non-zero error code unless you <em>really</em> mean it.\nExcept for uninstall scripts, this will cause the npm action to\nfail, and potentially be rolled back. If the failure is minor or\nonly will prevent some optional features, then it's better to just\nprint a warning and exit successfully.</li>\n<li>Try not to use scripts to do what npm can do for you. Read through\n<a href=\"/configuring-npm/package-json\"><code class=\"language-text\">package.json</code></a> to see all the things that you can specify and enable\nby simply describing your package appropriately. In general, this\nwill lead to a more robust and consistent state.</li>\n<li>Inspect the env to determine where to put things. For instance, if\nthe <code class=\"language-text\">npm_config_binroot</code> environment variable is set to <code class=\"language-text\">/home/user/bin</code>, then\ndon't try to install executables into <code class=\"language-text\">/usr/local/bin</code>. The user\nprobably set it up that way for a reason.</li>\n<li>Don't prefix your script commands with \"sudo\". If root permissions\nare required for some reason, then it'll fail with that error, and\nthe user will sudo the npm command in question.</li>\n<li>Don't use <code class=\"language-text\">install</code>. Use a <code class=\"language-text\">.gyp</code> file for compilation, and <code class=\"language-text\">prepublish</code>\nfor anything else. You should almost never have to explicitly set a\npreinstall or install script. If you are doing this, please consider if\nthere is another option. The only valid use of <code class=\"language-text\">install</code> or <code class=\"language-text\">preinstall</code>\nscripts is for compilation which must be done on the target architecture.</li>\n</ul>\n<h3 id=\"see-also\" style=\"position:relative;\"><a href=\"#see-also\" aria-label=\"see also permalink\" class=\"header-link-class before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>See Also</h3>\n<ul>\n<li><a href=\"/cli-commands/npm-run-script\">npm run-script</a></li>\n<li><a href=\"/configuring-npm/package-json\">package.json</a></li>\n<li><a href=\"/using-npm/developers\">npm developers</a></li>\n<li><a href=\"/cli-commands/npm-install\">npm install</a></li>\n</ul>"
}
