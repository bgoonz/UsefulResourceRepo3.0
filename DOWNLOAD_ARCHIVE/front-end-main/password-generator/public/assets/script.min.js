const passwordSizeRange = document.querySelector("#size-range"),
  passwordSizeInput = document.querySelector("#size-input"),
  result = document.querySelector("#result");
let actualSize = 0;
const numbers = [0, 1, 2, 3, 4, 5, 6, 8, 9, 10],
  upperCaseLetters = [
    "A",
    "B",
    "C",
    "D",
    "E",
    "F",
    "G",
    "H",
    "I",
    "J",
    "K",
    "L",
    "M",
    "N",
    "O",
    "P",
    "Q",
    "R",
    "S",
    "T",
    "U",
    "V",
    "W",
    "X",
    "Y",
    "Z",
  ],
  lowerCaseLetters = [
    "a",
    "b",
    "c",
    "d",
    "e",
    "f",
    "g",
    "h",
    "i",
    "j",
    "k",
    "l",
    "m",
    "n",
    "o",
    "p",
    "q",
    "r",
    "s",
    "t",
    "u",
    "v",
    "w",
    "x",
    "y",
    "z",
  ],
  symbols = [
    "!",
    "@",
    "#",
    "$",
    "%",
    "&",
    "*",
    "+",
    "-",
    "_",
    "<",
    ">",
    ":",
    ";",
    ".",
    "?",
    "|",
    "^",
    "~",
  ];
let actualChars = [];
const selection = {
  upperCaseLetters: { checked: !1, source: upperCaseLetters },
  lowerCaseLetters: { checked: !1, source: lowerCaseLetters },
  numbers: { checked: !1, source: numbers },
  symbols: { checked: !1, source: symbols },
  updateSelection: function (e, t) {
    (this[e].checked = t), updateActualChars();
  },
};
function updateActualChars() {
  let e = [];
  selection.upperCaseLetters.checked &&
    (e = e.concat(selection.upperCaseLetters.source)),
    selection.lowerCaseLetters.checked &&
      (e = e.concat(selection.lowerCaseLetters.source)),
    selection.numbers.checked && (e = e.concat(selection.numbers.source)),
    selection.symbols.checked && (e = e.concat(selection.symbols.source)),
    e.shuffle(),
    (actualChars = e);
}
function updateSizeRange(e) {
  passwordSizeRange.value = actualSize = parseInt(e);
}
function updateSizeInput(e) {
  passwordSizeInput.value = actualSize = parseInt(e);
}
function generatePassword() {
  if (0 != actualChars.length) {
    let t = "";
    for (let e = 0; e < actualSize; e++) t += actualChars.any();
    result.value = t;
  } else result.value = "";
}
function randomNumber(e) {
  return Math.round(Math.random() * e);
}
function changeActualSize(e) {
  actualSize = e;
}
function init() {
  const e = document.querySelector("#check-uppercase-letters"),
    t = document.querySelector("#check-lowercase-letters"),
    c = document.querySelector("#check-numbers"),
    n = document.querySelector("#check-symbols");
  selection.updateSelection("upperCaseLetters", e.checked),
    selection.updateSelection("lowerCaseLetters", t.checked),
    selection.updateSelection("numbers", c.checked),
    selection.updateSelection("symbols", n.checked),
    changeActualSize(passwordSizeRange.value),
    (passwordSizeRange.onchange = passwordSizeRange.oninput =
      function () {
        updateSizeInput(this.value), changeActualSize(this.value);
      }),
    (passwordSizeInput.onchange = passwordSizeInput.oninput =
      function () {
        updateSizeRange(this.value), changeActualSize(this.value);
      }),
    (e.onchange = function () {
      selection.updateSelection("upperCaseLetters", this.checked);
    }),
    (t.onchange = function () {
      selection.updateSelection("lowerCaseLetters", this.checked);
    }),
    (c.onchange = function () {
      selection.updateSelection("numbers", this.checked);
    }),
    (n.onchange = function () {
      selection.updateSelection("symbols", this.checked);
    }),
    (document.querySelector("#generate-btn").onclick = () =>
      generatePassword()),
    (document.querySelector("#copy-btn").onclick = () => copyToClipboard());
}
function copyToClipboard() {
  result.select(),
    result.setSelectionRange(0, 99999),
    document.execCommand("copy");
}
(Array.prototype.any = function () {
  return this[randomNumber(this.length - 1)];
}),
  (Array.prototype.swap = function (e, t) {
    var c = this[e];
    (this[e] = this[t]), (this[t] = c);
  }),
  (Array.prototype.shuffle = function () {
    var t = this.length - 1;
    for (let e = 0; e <= t; e++) this.swap(randomNumber(t), randomNumber(t));
  });
