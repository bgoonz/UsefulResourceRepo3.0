{
  "expireTime": 9007200887118514000,
  "key": "transformer-remark-markdown-html-d6317aeabd8b991b8d98568cd5baa55c-gatsby-remark-autolink-headersgatsby-remark-prismjs-",
  "val": "<h1 id=\"package-locks5\" style=\"position:relative;\"><a href=\"#package-locks5\" aria-label=\"package locks5 permalink\" class=\"header-link-class before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>package-locks(5)</h1>\n<h2 id=\"an-explanation-of-npm-lockfiles\" style=\"position:relative;\"><a href=\"#an-explanation-of-npm-lockfiles\" aria-label=\"an explanation of npm lockfiles permalink\" class=\"header-link-class before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>An explanation of npm lockfiles</h2>\n<h3 id=\"description\" style=\"position:relative;\"><a href=\"#description\" aria-label=\"description permalink\" class=\"header-link-class before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Description</h3>\n<p>Conceptually, the \"input\" to <a href=\"/cli-commands/npm-install\"><code class=\"language-text\">npm install</code></a> is a <a href=\"/configuring-npm/package-json\">package.json</a>, while its\n\"output\" is a fully-formed <code class=\"language-text\">node_modules</code> tree: a representation of the\ndependencies you declared. In an ideal world, npm would work like a pure\nfunction: the same <code class=\"language-text\">package.json</code> should produce the exact same <code class=\"language-text\">node_modules</code>\ntree, any time. In some cases, this is indeed true. But in many others, npm is\nunable to do this. There are multiple reasons for this:</p>\n<ul>\n<li>different versions of npm (or other package managers) may have been used to install a package, each using slightly different installation algorithms.</li>\n<li>a new version of a direct semver-range package may have been published since the last time your packages were installed, and thus a newer version will be used.</li>\n<li>A dependency of one of your dependencies may have published a new version, which will update even if you used pinned dependency specifiers (<code class=\"language-text\">1.2.3</code> instead of <code class=\"language-text\">^1.2.3</code>)</li>\n<li>The registry you installed from is no longer available, or allows mutation of versions (unlike the primary npm registry), and a different version of a package exists under the same version number now.</li>\n</ul>\n<p>As an example, consider package A:</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"A\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"version\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"0.1.0\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"dependencies\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"B\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"&lt;0.1.0\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>package B:</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"B\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"version\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"0.0.1\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"dependencies\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"C\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"&lt;0.1.0\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>and package C:</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"C\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"version\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"0.0.1\"</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>If these are the only versions of A, B, and C available in the\nregistry, then a normal <code class=\"language-text\">npm install A</code> will install:</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\">A@<span class=\"token number\">0.1</span>.<span class=\"token number\">0</span>\n`-- B@<span class=\"token number\">0.0</span>.<span class=\"token number\">1</span>\n    `-- C@<span class=\"token number\">0.0</span>.<span class=\"token number\">1</span></code></pre></div>\n<p>However, if B@0.0.2 is published, then a fresh <code class=\"language-text\">npm install A</code> will\ninstall:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">A@0.1.0\n<span class=\"token variable\"><span class=\"token variable\">`</span>-- B@0.0.2\n    <span class=\"token variable\">`</span></span>-- C@0.0.1</code></pre></div>\n<p>assuming the new version did not modify B's dependencies. Of course,\nthe new version of B could include a new version of C and any number\nof new dependencies. If such changes are undesirable, the author of A\ncould specify a dependency on B@0.0.1. However, if A's author and B's\nauthor are not the same person, there's no way for A's author to say\nthat he or she does not want to pull in newly published versions of C\nwhen B hasn't changed at all.</p>\n<p>To prevent this potential issue, npm uses <a href=\"/configuring-npm/package-lock-json\">package-lock.json</a> or, if present, <a href=\"/configuring-npm/shrinkwrap-json\">npm-shrinkwrap.json</a>. These files are called package locks, or lockfiles.</p>\n<p>Whenever you run <code class=\"language-text\">npm install</code>, npm generates or updates your package lock,\nwhich will look something like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"A\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"version\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"0.1.0\"</span><span class=\"token punctuation\">,</span>\n  ...metadata fields...\n  <span class=\"token property\">\"dependencies\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"B\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"version\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"0.0.1\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"resolved\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"https://registry.npmjs.org/B/-/B-0.0.1.tgz\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"integrity\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"sha512-DeAdb33F+\"</span>\n      <span class=\"token property\">\"dependencies\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"C\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token property\">\"version\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"git://github.com/org/C.git#5c380ae319fc4efe9e7f2d9c78b0faa588fd99b4\"</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>This file describes an <em>exact</em>, and more importantly <em>reproducible</em>\n<code class=\"language-text\">node_modules</code> tree. Once it's present, any future installation will base its\nwork off this file, instead of recalculating dependency versions off\n<a href=\"/configuring-npm/package-json\">package.json</a>.</p>\n<p>The presence of a package lock changes the installation behavior such that:</p>\n<ol>\n<li>The module tree described by the package lock is reproduced. This means\nreproducing the structure described in the file, using the specific files\nreferenced in \"resolved\" if available, falling back to normal package resolution\nusing \"version\" if one isn't.</li>\n<li>The tree is walked and any missing dependencies are installed in the usual\nfashion.</li>\n</ol>\n<p>If <code class=\"language-text\">preshrinkwrap</code>, <code class=\"language-text\">shrinkwrap</code> or <code class=\"language-text\">postshrinkwrap</code> are in the <code class=\"language-text\">scripts</code>\nproperty of the <code class=\"language-text\">package.json</code>, they will be executed in order. <code class=\"language-text\">preshrinkwrap</code>\nand <code class=\"language-text\">shrinkwrap</code> are executed before the shrinkwrap, <code class=\"language-text\">postshrinkwrap</code> is\nexecuted afterwards. These scripts run for both <code class=\"language-text\">package-lock.json</code> and\n<code class=\"language-text\">npm-shrinkwrap.json</code>. For example to run some postprocessing on the generated\nfile:</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\">  <span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"postshrinkwrap\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"json -I -e \\\"this.myMetadata = $MY_APP_METADATA\\\"\"</span>\n  <span class=\"token punctuation\">}</span></code></pre></div>\n<h4 id=\"using-locked-packages\" style=\"position:relative;\"><a href=\"#using-locked-packages\" aria-label=\"using locked packages permalink\" class=\"header-link-class before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Using locked packages</h4>\n<p>Using a locked package is no different than using any package without a package\nlock: any commands that update <code class=\"language-text\">node_modules</code> and/or <code class=\"language-text\">package.json</code>'s\ndependencies will automatically sync the existing lockfile. This includes <code class=\"language-text\">npm install</code>, <code class=\"language-text\">npm rm</code>, <code class=\"language-text\">npm update</code>, etc. To prevent this update from happening,\nyou can use the <code class=\"language-text\">--no-save</code> option to prevent saving altogether, or\n<code class=\"language-text\">--no-shrinkwrap</code> to allow <code class=\"language-text\">package.json</code> to be updated while leaving\n<code class=\"language-text\">package-lock.json</code> or <code class=\"language-text\">npm-shrinkwrap.json</code> intact.</p>\n<p>It is highly recommended you commit the generated package lock to source\ncontrol: this will allow anyone else on your team, your deployments, your\nCI/continuous integration, and anyone else who runs <code class=\"language-text\">npm install</code> in your\npackage source to get the exact same dependency tree that you were developing\non. Additionally, the diffs from these changes are human-readable and will\ninform you of any changes npm has made to your <code class=\"language-text\">node_modules</code>, so you can notice\nif any transitive dependencies were updated, hoisted, etc.</p>\n<h4 id=\"resolving-lockfile-conflicts\" style=\"position:relative;\"><a href=\"#resolving-lockfile-conflicts\" aria-label=\"resolving lockfile conflicts permalink\" class=\"header-link-class before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Resolving lockfile conflicts</h4>\n<p>Occasionally, two separate npm install will create package locks that cause\nmerge conflicts in source control systems. As of <code class=\"language-text\">npm@5.7.0</code>, these conflicts\ncan be resolved by manually fixing any <code class=\"language-text\">package.json</code> conflicts, and then\nrunning <code class=\"language-text\">npm install [--package-lock-only]</code> again. npm will automatically\nresolve any conflicts for you and write a merged package lock that includes all\nthe dependencies from both branches in a reasonable tree. If\n<code class=\"language-text\">--package-lock-only</code> is provided, it will do this without also modifying your\nlocal <code class=\"language-text\">node_modules/</code>.</p>\n<p>To make this process seamless on git, consider installing\n<a href=\"https://npm.im/npm-merge-driver\"><code class=\"language-text\">npm-merge-driver</code></a>, which will teach git how\nto do this itself without any user interaction. In short: <code class=\"language-text\">$ npx npm-merge-driver install -g</code> will let you do this, and even works with\npre-<code class=\"language-text\">npm@5.7.0</code> versions of npm 5, albeit a bit more noisily. Note that if\n<code class=\"language-text\">package.json</code> itself conflicts, you will have to resolve that by hand and run\n<code class=\"language-text\">npm install</code> manually, even with the merge driver.</p>\n<h3 id=\"see-also\" style=\"position:relative;\"><a href=\"#see-also\" aria-label=\"see also permalink\" class=\"header-link-class before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>See Also</h3>\n<ul>\n<li><a href=\"https://medium.com/@sdboyer/so-you-want-to-write-a-package-manager-4ae9c17d9527\">https://medium.com/@sdboyer/so-you-want-to-write-a-package-manager-4ae9c17d9527</a></li>\n<li><a href=\"/configuring-npm/package-json\">package.json</a></li>\n<li><a href=\"/configuring-npm/package-lock-json\">package-lock.json</a></li>\n<li><a href=\"/configuring-npm/shrinkwrap-json\">shrinkwrap.json</a></li>\n<li><a href=\"/cli-commands/npm-shrinkwrap\">npm shrinkwrap</a></li>\n</ul>"
}
