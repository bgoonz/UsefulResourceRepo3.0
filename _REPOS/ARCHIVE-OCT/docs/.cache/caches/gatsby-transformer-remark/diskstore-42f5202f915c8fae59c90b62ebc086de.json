{
  "expireTime": 9007200887118514000,
  "key": "transformer-remark-markdown-html-b8c4310be4faa5f968367a8eee7f67c2-gatsby-remark-autolink-headersgatsby-remark-prismjs-",
  "val": "<h1 id=\"npm-install1\" style=\"position:relative;\"><a href=\"#npm-install1\" aria-label=\"npm install1 permalink\" class=\"header-link-class before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>npm-install(1)</h1>\n<h2 id=\"install-a-package\" style=\"position:relative;\"><a href=\"#install-a-package\" aria-label=\"install a package permalink\" class=\"header-link-class before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Install a package</h2>\n<h3 id=\"synopsis\" style=\"position:relative;\"><a href=\"#synopsis\" aria-label=\"synopsis permalink\" class=\"header-link-class before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Synopsis</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> <span class=\"token punctuation\">(</span>with no args, <span class=\"token keyword\">in</span> package <span class=\"token function\">dir</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">npm</span> <span class=\"token function\">install</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span>@scope<span class=\"token operator\">></span>/<span class=\"token punctuation\">]</span><span class=\"token operator\">&lt;</span>name<span class=\"token operator\">></span>\n<span class=\"token function\">npm</span> <span class=\"token function\">install</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span>@scope<span class=\"token operator\">></span>/<span class=\"token punctuation\">]</span><span class=\"token operator\">&lt;</span>name<span class=\"token operator\">></span>@<span class=\"token operator\">&lt;</span>tag<span class=\"token operator\">></span>\n<span class=\"token function\">npm</span> <span class=\"token function\">install</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span>@scope<span class=\"token operator\">></span>/<span class=\"token punctuation\">]</span><span class=\"token operator\">&lt;</span>name<span class=\"token operator\">></span>@<span class=\"token operator\">&lt;</span>version<span class=\"token operator\">></span>\n<span class=\"token function\">npm</span> <span class=\"token function\">install</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span>@scope<span class=\"token operator\">></span>/<span class=\"token punctuation\">]</span><span class=\"token operator\">&lt;</span>name<span class=\"token operator\">></span>@<span class=\"token operator\">&lt;</span>version range<span class=\"token operator\">></span>\n<span class=\"token function\">npm</span> <span class=\"token function\">install</span> <span class=\"token operator\">&lt;</span>alias<span class=\"token operator\">></span>@npm:<span class=\"token operator\">&lt;</span>name<span class=\"token operator\">></span>\n<span class=\"token function\">npm</span> <span class=\"token function\">install</span> <span class=\"token operator\">&lt;</span>git-host<span class=\"token operator\">></span>:<span class=\"token operator\">&lt;</span>git-user<span class=\"token operator\">></span>/<span class=\"token operator\">&lt;</span>repo-name<span class=\"token operator\">></span>\n<span class=\"token function\">npm</span> <span class=\"token function\">install</span> <span class=\"token operator\">&lt;</span>git repo url<span class=\"token operator\">></span>\n<span class=\"token function\">npm</span> <span class=\"token function\">install</span> <span class=\"token operator\">&lt;</span>tarball file<span class=\"token operator\">></span>\n<span class=\"token function\">npm</span> <span class=\"token function\">install</span> <span class=\"token operator\">&lt;</span>tarball url<span class=\"token operator\">></span>\n<span class=\"token function\">npm</span> <span class=\"token function\">install</span> <span class=\"token operator\">&lt;</span>folder<span class=\"token operator\">></span>\n\naliases: <span class=\"token function\">npm</span> i, <span class=\"token function\">npm</span> <span class=\"token function\">add</span>\ncommon options: <span class=\"token punctuation\">[</span>-P<span class=\"token operator\">|</span>--save-prod<span class=\"token operator\">|</span>-D<span class=\"token operator\">|</span>--save-dev<span class=\"token operator\">|</span>-O<span class=\"token operator\">|</span>--save-optional<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>-E<span class=\"token operator\">|</span>--save-exact<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>-B<span class=\"token operator\">|</span>--save-bundle<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>--no-save<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>--dry-run<span class=\"token punctuation\">]</span></code></pre></div>\n<h3 id=\"description\" style=\"position:relative;\"><a href=\"#description\" aria-label=\"description permalink\" class=\"header-link-class before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Description</h3>\n<p>This command installs a package, and any packages that it depends on. If the\npackage has a package-lock or shrinkwrap file, the installation of dependencies\nwill be driven by that, with an <code class=\"language-text\">npm-shrinkwrap.json</code> taking precedence if both\nfiles exist. See <a href=\"/configuring-npm/package-lock-json\">package-lock.json</a> and <a href=\"/cli-commands/npm-shrinkwrap\"><code class=\"language-text\">npm shrinkwrap</code></a>.</p>\n<p>A <code class=\"language-text\">package</code> is:</p>\n<ul>\n<li>a) a folder containing a program described by a <a href=\"/configuring-npm/package-json\"><code class=\"language-text\">package.json</code></a> file</li>\n<li>b) a gzipped tarball containing (a)</li>\n<li>c) a url that resolves to (b)</li>\n<li>d) a <code class=\"language-text\">&lt;name&gt;@&lt;version&gt;</code> that is published on the registry (see <a href=\"/using-npm/registry\"><code class=\"language-text\">registry</code></a>) with (c)</li>\n<li>e) a <code class=\"language-text\">&lt;name&gt;@&lt;tag&gt;</code> (see <a href=\"/cli-commands/npm-dist-tag\"><code class=\"language-text\">npm dist-tag</code></a>) that points to (d)</li>\n<li>f) a <code class=\"language-text\">&lt;name&gt;</code> that has a \"latest\" tag satisfying (e)</li>\n<li>g) a <code class=\"language-text\">&lt;git remote url&gt;</code> that resolves to (a)</li>\n</ul>\n<p>Even if you never publish your package, you can still get a lot of\nbenefits of using npm if you just want to write a node program (a), and\nperhaps if you also want to be able to easily install it elsewhere\nafter packing it up into a tarball (b).</p>\n<ul>\n<li>\n<p><code class=\"language-text\">npm install</code> (in package directory, no arguments):</p>\n<p>Install the dependencies in the local node_modules folder.</p>\n<p>In global mode (ie, with <code class=\"language-text\">-g</code> or <code class=\"language-text\">--global</code> appended to the command),\nit installs the current package context (ie, the current working\ndirectory) as a global package.</p>\n<p>By default, <code class=\"language-text\">npm install</code> will install all modules listed as dependencies\nin <a href=\"/configuring-npm/package-json\"><code class=\"language-text\">package.json</code></a>.</p>\n<p>With the <code class=\"language-text\">--production</code> flag (or when the <code class=\"language-text\">NODE_ENV</code> environment variable\nis set to <code class=\"language-text\">production</code>), npm will not install modules listed in\n<code class=\"language-text\">devDependencies</code>. To install all modules listed in both <code class=\"language-text\">dependencies</code>\nand <code class=\"language-text\">devDependencies</code> when <code class=\"language-text\">NODE_ENV</code> environment variable is set to <code class=\"language-text\">production</code>,\nyou can use <code class=\"language-text\">--production=false</code>.</p>\n<blockquote>\n<p>NOTE: The <code class=\"language-text\">--production</code> flag has no particular meaning when adding a\ndependency to a project.</p>\n</blockquote>\n</li>\n<li>\n<p><code class=\"language-text\">npm install &lt;folder&gt;</code>:</p>\n<p>Install the package in the directory as a symlink in the current project.\nIts dependencies will be installed before it's linked. If <code class=\"language-text\">&lt;folder&gt;</code> sits\ninside the root of your project, its dependencies may be hoisted to the\ntoplevel <code class=\"language-text\">node_modules</code> as they would for other types of dependencies.</p>\n</li>\n<li>\n<p><code class=\"language-text\">npm install &lt;tarball file&gt;</code>:</p>\n<p>Install a package that is sitting on the filesystem. Note: if you just want\nto link a dev directory into your npm root, you can do this more easily by\nusing <code class=\"language-text\">npm link</code>.</p>\n<p>Tarball requirements:</p>\n<ul>\n<li>The filename <em>must</em> use <code class=\"language-text\">.tar</code>, <code class=\"language-text\">.tar.gz</code>, or <code class=\"language-text\">.tgz</code> as\nthe extension.</li>\n<li>The package contents should reside in a subfolder inside the tarball (usually it is called <code class=\"language-text\">package/</code>). npm strips one directory layer when installing the package (an equivalent of <code class=\"language-text\">tar x --strip-components=1</code> is run).</li>\n<li>The package must contain a <code class=\"language-text\">package.json</code> file with <code class=\"language-text\">name</code> and <code class=\"language-text\">version</code> properties.</li>\n</ul>\n<p>Example:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  npm install ./package.tgz</code></pre></div>\n</li>\n<li>\n<p><code class=\"language-text\">npm install &lt;tarball url&gt;</code>:</p>\n<p>Fetch the tarball url, and then install it. In order to distinguish between\nthis and other options, the argument must start with \"http://\" or \"https://\"</p>\n<p>Example:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  npm install https://github.com/indexzero/forever/tarball/v0.5.6</code></pre></div>\n</li>\n<li>\n<p><code class=\"language-text\">npm install [&lt;@scope&gt;/]&lt;name&gt;</code>:</p>\n<p>Do a <code class=\"language-text\">&lt;name&gt;@&lt;tag&gt;</code> install, where <code class=\"language-text\">&lt;tag&gt;</code> is the \"tag\" config. (See\n<a href=\"/using-npm/config\"><code class=\"language-text\">config</code></a>. The config's default value is <code class=\"language-text\">latest</code>.)</p>\n<p>In most cases, this will install the version of the modules tagged as\n<code class=\"language-text\">latest</code> on the npm registry.</p>\n<p>Example:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  npm install sax</code></pre></div>\n</li>\n<li>\n<p><code class=\"language-text\">npm install &lt;alias&gt;@npm:&lt;name&gt;</code>:</p>\n<p>Install a package under a custom alias. Allows multiple versions of\na same-name package side-by-side, more convenient import names for\npackages with otherwise long ones and using git forks replacements\nor forked npm packages as replacements. Aliasing works only on your\nproject and does not rename packages in transitive dependencies.\nAliases should follow the naming conventions stated in\n<a href=\"https://www.npmjs.com/package/validate-npm-package-name#naming-rules\"><code class=\"language-text\">validate-npm-package-name</code></a>.</p>\n<p>Examples:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  npm install my-react@npm:react\n  npm install jquery2@npm:jquery@2\n  npm install jquery3@npm:jquery@3\n  npm install npa@npm:npm-package-arg</code></pre></div>\n<p><code class=\"language-text\">npm install</code> saves any specified packages into <code class=\"language-text\">dependencies</code> by default.\nAdditionally, you can control where and how they get saved with some\nadditional flags:</p>\n<ul>\n<li><code class=\"language-text\">-P, --save-prod</code>: Package will appear in your <code class=\"language-text\">dependencies</code>. This is the\ndefault unless <code class=\"language-text\">-D</code> or <code class=\"language-text\">-O</code> are present.</li>\n<li><code class=\"language-text\">-D, --save-dev</code>: Package will appear in your <code class=\"language-text\">devDependencies</code>.</li>\n<li><code class=\"language-text\">-O, --save-optional</code>: Package will appear in your <code class=\"language-text\">optionalDependencies</code>.</li>\n<li><code class=\"language-text\">--no-save</code>: Prevents saving to <code class=\"language-text\">dependencies</code>.</li>\n</ul>\n<p>When using any of the above options to save dependencies to your\npackage.json, there are two additional, optional flags:</p>\n<ul>\n<li><code class=\"language-text\">-E, --save-exact</code>: Saved dependencies will be configured with an\nexact version rather than using npm's default semver range\noperator.</li>\n<li><code class=\"language-text\">-B, --save-bundle</code>: Saved dependencies will also be added to your <code class=\"language-text\">bundleDependencies</code> list.</li>\n</ul>\n<p>Further, if you have an <code class=\"language-text\">npm-shrinkwrap.json</code> or <code class=\"language-text\">package-lock.json</code> then it\nwill be updated as well.</p>\n<p><code class=\"language-text\">&lt;scope&gt;</code> is optional. The package will be downloaded from the registry\nassociated with the specified scope. If no registry is associated with\nthe given scope the default registry is assumed. See <a href=\"/using-npm/scope\"><code class=\"language-text\">scope</code></a>.</p>\n<p>Note: if you do not include the @-symbol on your scope name, npm will\ninterpret this as a GitHub repository instead, see below. Scopes names\nmust also be followed by a slash.</p>\n<p>Examples:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> sax\n<span class=\"token function\">npm</span> <span class=\"token function\">install</span> githubname/reponame\n<span class=\"token function\">npm</span> <span class=\"token function\">install</span> @myorg/privatepackage\n<span class=\"token function\">npm</span> <span class=\"token function\">install</span> node-tap --save-dev\n<span class=\"token function\">npm</span> <span class=\"token function\">install</span> dtrace-provider --save-optional\n<span class=\"token function\">npm</span> <span class=\"token function\">install</span> readable-stream --save-exact\n<span class=\"token function\">npm</span> <span class=\"token function\">install</span> ansi-regex --save-bundle</code></pre></div>\n<p><strong>Note</strong>: If there is a file or folder named <code class=\"language-text\">&lt;name&gt;</code> in the current\nworking directory, then it will try to install that, and only try to\nfetch the package by name if it is not valid.</p>\n</li>\n<li>\n<p><code class=\"language-text\">npm install [&lt;@scope&gt;/]&lt;name&gt;@&lt;tag&gt;</code>:</p>\n<p>Install the version of the package that is referenced by the specified tag.\nIf the tag does not exist in the registry data for that package, then this\nwill fail.</p>\n<p>Example:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> sax@latest\n<span class=\"token function\">npm</span> <span class=\"token function\">install</span> @myorg/mypackage@latest</code></pre></div>\n</li>\n<li>\n<p><code class=\"language-text\">npm install [&lt;@scope&gt;/]&lt;name&gt;@&lt;version&gt;</code>:</p>\n<p>Install the specified version of the package. This will fail if the\nversion has not been published to the registry.</p>\n<p>Example:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> sax@0.1.1\n<span class=\"token function\">npm</span> <span class=\"token function\">install</span> @myorg/privatepackage@1.5.0</code></pre></div>\n</li>\n<li>\n<p><code class=\"language-text\">npm install [&lt;@scope&gt;/]&lt;name&gt;@&lt;version range&gt;</code>:</p>\n<p>Install a version of the package matching the specified version range. This\nwill follow the same rules for resolving dependencies described in <a href=\"/configuring-npm/package-json\"><code class=\"language-text\">package.json</code></a>.</p>\n<p>Note that most version ranges must be put in quotes so that your shell will\ntreat it as a single argument.</p>\n<p>Example:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> sax@<span class=\"token string\">\">=0.1.0 &lt;0.2.0\"</span>\n<span class=\"token function\">npm</span> <span class=\"token function\">install</span> @myorg/privatepackage@<span class=\"token string\">\">=0.1.0 &lt;0.2.0\"</span></code></pre></div>\n</li>\n<li>\n<p><code class=\"language-text\">npm install &lt;git remote url&gt;</code>:</p>\n<p>Installs the package from the hosted git provider, cloning it with <code class=\"language-text\">git</code>.\nFor a full git remote url, only that URL will be attempted.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token operator\">&lt;</span>protocol<span class=\"token operator\">></span>://<span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span>user<span class=\"token operator\">></span><span class=\"token punctuation\">[</span>:<span class=\"token operator\">&lt;</span>password<span class=\"token operator\">></span><span class=\"token punctuation\">]</span>@<span class=\"token punctuation\">]</span><span class=\"token operator\">&lt;</span>hostname<span class=\"token operator\">></span><span class=\"token punctuation\">[</span>:<span class=\"token operator\">&lt;</span>port<span class=\"token operator\">></span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>:<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>/<span class=\"token punctuation\">]</span><span class=\"token operator\">&lt;</span>path<span class=\"token operator\">></span><span class=\"token punctuation\">[</span><span class=\"token comment\">#&lt;commit-ish> | #semver:&lt;semver>]</span></code></pre></div>\n<p><code class=\"language-text\">&lt;protocol&gt;</code> is one of <code class=\"language-text\">git</code>, <code class=\"language-text\">git+ssh</code>, <code class=\"language-text\">git+http</code>, <code class=\"language-text\">git+https</code>, or\n<code class=\"language-text\">git+file</code>.</p>\n<p>If <code class=\"language-text\">#&lt;commit-ish&gt;</code> is provided, it will be used to clone exactly that\ncommit. If the commit-ish has the format <code class=\"language-text\">#semver:&lt;semver&gt;</code>, <code class=\"language-text\">&lt;semver&gt;</code> can\nbe any valid semver range or exact version, and npm will look for any tags\nor refs matching that range in the remote repository, much as it would for a\nregistry dependency. If neither <code class=\"language-text\">#&lt;commit-ish&gt;</code> or <code class=\"language-text\">#semver:&lt;semver&gt;</code> is\nspecified, then the default branch of the repository is used.</p>\n<p>If the repository makes use of submodules, those submodules will be cloned\nas well.</p>\n<p>If the package being installed contains a <code class=\"language-text\">prepare</code> script, its\n<code class=\"language-text\">dependencies</code> and <code class=\"language-text\">devDependencies</code> will be installed, and the prepare\nscript will be run, before the package is packaged and installed.</p>\n<p>The following git environment variables are recognized by npm and will be\nadded to the environment when running git:</p>\n<ul>\n<li><code class=\"language-text\">GIT_ASKPASS</code></li>\n<li><code class=\"language-text\">GIT_EXEC_PATH</code></li>\n<li><code class=\"language-text\">GIT_PROXY_COMMAND</code></li>\n<li><code class=\"language-text\">GIT_SSH</code></li>\n<li><code class=\"language-text\">GIT_SSH_COMMAND</code></li>\n<li><code class=\"language-text\">GIT_SSL_CAINFO</code></li>\n<li><code class=\"language-text\">GIT_SSL_NO_VERIFY</code></li>\n</ul>\n<p>See the git man page for details.</p>\n<p>Examples:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> git+ssh://git@github.com:npm/cli.git<span class=\"token comment\">#v1.0.27</span>\n<span class=\"token function\">npm</span> <span class=\"token function\">install</span> git+ssh://git@github.com:npm/cli<span class=\"token comment\">#semver:^5.0</span>\n<span class=\"token function\">npm</span> <span class=\"token function\">install</span> git+https://isaacs@github.com/npm/cli.git\n<span class=\"token function\">npm</span> <span class=\"token function\">install</span> git://github.com/npm/cli.git<span class=\"token comment\">#v1.0.27</span>\n<span class=\"token assign-left variable\">GIT_SSH_COMMAND</span><span class=\"token operator\">=</span><span class=\"token string\">'ssh -i ~/.ssh/custom_ident'</span> <span class=\"token function\">npm</span> <span class=\"token function\">install</span> git+ssh://git@github.com:npm/cli.git</code></pre></div>\n</li>\n<li><code class=\"language-text\">npm install &lt;githubname&gt;/&lt;githubrepo&gt;[#&lt;commit-ish&gt;]</code>:</li>\n<li>\n<p><code class=\"language-text\">npm install github:&lt;githubname&gt;/&lt;githubrepo&gt;[#&lt;commit-ish&gt;]</code>:</p>\n<p>Install the package at <code class=\"language-text\">https://github.com/githubname/githubrepo</code> by\nattempting to clone it using <code class=\"language-text\">git</code>.</p>\n<p>If <code class=\"language-text\">#&lt;commit-ish&gt;</code> is provided, it will be used to clone exactly that\ncommit. If the commit-ish has the format <code class=\"language-text\">#semver:&lt;semver&gt;</code>, <code class=\"language-text\">&lt;semver&gt;</code> can\nbe any valid semver range or exact version, and npm will look for any tags\nor refs matching that range in the remote repository, much as it would for a\nregistry dependency. If neither <code class=\"language-text\">#&lt;commit-ish&gt;</code> or <code class=\"language-text\">#semver:&lt;semver&gt;</code> is\nspecified, then <code class=\"language-text\">master</code> is used.</p>\n<p>As with regular git dependencies, <code class=\"language-text\">dependencies</code> and <code class=\"language-text\">devDependencies</code> will\nbe installed if the package has a <code class=\"language-text\">prepare</code> script, before the package is\ndone installing.</p>\n<p>Examples:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> mygithubuser/myproject\n<span class=\"token function\">npm</span> <span class=\"token function\">install</span> github:mygithubuser/myproject</code></pre></div>\n</li>\n<li>\n<p><code class=\"language-text\">npm install gist:[&lt;githubname&gt;/]&lt;gistID&gt;[#&lt;commit-ish&gt;|#semver:&lt;semver&gt;]</code>:</p>\n<p>Install the package at <code class=\"language-text\">https://gist.github.com/gistID</code> by attempting to\nclone it using <code class=\"language-text\">git</code>. The GitHub username associated with the gist is\noptional and will not be saved in <code class=\"language-text\">package.json</code>.</p>\n<p>As with regular git dependencies, <code class=\"language-text\">dependencies</code> and <code class=\"language-text\">devDependencies</code> will\nbe installed if the package has a <code class=\"language-text\">prepare</code> script, before the package is\ndone installing.</p>\n<p>Example:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> gist:101a11beef</code></pre></div>\n</li>\n<li>\n<p><code class=\"language-text\">npm install bitbucket:&lt;bitbucketname&gt;/&lt;bitbucketrepo&gt;[#&lt;commit-ish&gt;]</code>:</p>\n<p>Install the package at <code class=\"language-text\">https://bitbucket.org/bitbucketname/bitbucketrepo</code>\nby attempting to clone it using <code class=\"language-text\">git</code>.</p>\n<p>If <code class=\"language-text\">#&lt;commit-ish&gt;</code> is provided, it will be used to clone exactly that\ncommit. If the commit-ish has the format <code class=\"language-text\">#semver:&lt;semver&gt;</code>, <code class=\"language-text\">&lt;semver&gt;</code> can\nbe any valid semver range or exact version, and npm will look for any tags\nor refs matching that range in the remote repository, much as it would for a\nregistry dependency. If neither <code class=\"language-text\">#&lt;commit-ish&gt;</code> or <code class=\"language-text\">#semver:&lt;semver&gt;</code> is\nspecified, then <code class=\"language-text\">master</code> is used.</p>\n<p>As with regular git dependencies, <code class=\"language-text\">dependencies</code> and <code class=\"language-text\">devDependencies</code> will\nbe installed if the package has a <code class=\"language-text\">prepare</code> script, before the package is\ndone installing.</p>\n<p>Example:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> bitbucket:mybitbucketuser/myproject</code></pre></div>\n</li>\n<li>\n<p><code class=\"language-text\">npm install gitlab:&lt;gitlabname&gt;/&lt;gitlabrepo&gt;[#&lt;commit-ish&gt;]</code>:</p>\n<p>Install the package at <code class=\"language-text\">https://gitlab.com/gitlabname/gitlabrepo</code>\nby attempting to clone it using <code class=\"language-text\">git</code>.</p>\n<p>If <code class=\"language-text\">#&lt;commit-ish&gt;</code> is provided, it will be used to clone exactly that\ncommit. If the commit-ish has the format <code class=\"language-text\">#semver:&lt;semver&gt;</code>, <code class=\"language-text\">&lt;semver&gt;</code> can\nbe any valid semver range or exact version, and npm will look for any tags\nor refs matching that range in the remote repository, much as it would for a\nregistry dependency. If neither <code class=\"language-text\">#&lt;commit-ish&gt;</code> or <code class=\"language-text\">#semver:&lt;semver&gt;</code> is\nspecified, then <code class=\"language-text\">master</code> is used.</p>\n<p>As with regular git dependencies, <code class=\"language-text\">dependencies</code> and <code class=\"language-text\">devDependencies</code> will\nbe installed if the package has a <code class=\"language-text\">prepare</code> script, before the package is\ndone installing.</p>\n<p>Example:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> gitlab:mygitlabuser/myproject\n<span class=\"token function\">npm</span> <span class=\"token function\">install</span> gitlab:myusr/myproj<span class=\"token comment\">#semver:^5.0</span></code></pre></div>\n</li>\n</ul>\n<p>You may combine multiple arguments, and even multiple types of arguments.\nFor example:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> sax@<span class=\"token string\">\">=0.1.0 &lt;0.2.0\"</span> bench supervisor</code></pre></div>\n<p>The <code class=\"language-text\">--tag</code> argument will apply to all of the specified install targets. If a\ntag with the given name exists, the tagged version is preferred over newer\nversions.</p>\n<p>The <code class=\"language-text\">--dry-run</code> argument will report in the usual way what the install would\nhave done without actually installing anything.</p>\n<p>The <code class=\"language-text\">--package-lock-only</code> argument will only update the <code class=\"language-text\">package-lock.json</code>,\ninstead of checking <code class=\"language-text\">node_modules</code> and downloading dependencies.</p>\n<p>The <code class=\"language-text\">-f</code> or <code class=\"language-text\">--force</code> argument will force npm to fetch remote resources even if a\nlocal copy exists on disk.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> sax --force</code></pre></div>\n<p>The <code class=\"language-text\">--no-fund</code> argument will hide the message displayed at the end of each\ninstall that acknowledges the number of dependencies looking for funding.\nSee <code class=\"language-text\">npm-fund(1)</code></p>\n<p>The <code class=\"language-text\">-g</code> or <code class=\"language-text\">--global</code> argument will cause npm to install the package globally\nrather than locally. See <a href=\"/configuring-npm/folders\">folders</a>.</p>\n<p>The <code class=\"language-text\">--global-style</code> argument will cause npm to install the package into\nyour local <code class=\"language-text\">node_modules</code> folder with the same layout it uses with the\nglobal <code class=\"language-text\">node_modules</code> folder. Only your direct dependencies will show in\n<code class=\"language-text\">node_modules</code> and everything they depend on will be flattened in their\n<code class=\"language-text\">node_modules</code> folders. This obviously will eliminate some deduping.</p>\n<p>The <code class=\"language-text\">--ignore-scripts</code> argument will cause npm to not execute any\nscripts defined in the package.json. See <a href=\"/using-npm/scripts\"><code class=\"language-text\">scripts</code></a>.</p>\n<p>The <code class=\"language-text\">--legacy-bundling</code> argument will cause npm to install the package such\nthat versions of npm prior to 1.4, such as the one included with node 0.8,\ncan install the package. This eliminates all automatic deduping.</p>\n<p>The <code class=\"language-text\">--link</code> argument will cause npm to link global installs into the\nlocal space in some cases.</p>\n<p>The <code class=\"language-text\">--no-bin-links</code> argument will prevent npm from creating symlinks for\nany binaries the package might contain.</p>\n<p>The <code class=\"language-text\">--no-optional</code> argument will prevent optional dependencies from\nbeing installed.</p>\n<p>The <code class=\"language-text\">--no-shrinkwrap</code> argument, which will ignore an available\npackage lock or shrinkwrap file and use the package.json instead.</p>\n<p>The <code class=\"language-text\">--no-package-lock</code> argument will prevent npm from creating a\n<code class=\"language-text\">package-lock.json</code> file. When running with package-lock's disabled npm\nwill not automatically prune your node modules when installing.</p>\n<p>The <code class=\"language-text\">--nodedir=/path/to/node/source</code> argument will allow npm to find the\nnode source code so that npm can compile native modules.</p>\n<p>The <code class=\"language-text\">--only={prod[uction]|dev[elopment]}</code> argument will cause either only\n<code class=\"language-text\">devDependencies</code> or only non-<code class=\"language-text\">devDependencies</code> to be installed regardless of the <code class=\"language-text\">NODE_ENV</code>.</p>\n<p>The <code class=\"language-text\">--no-audit</code> argument can be used to disable sending of audit reports to\nthe configured registries. See <a href=\"npm-audit\"><code class=\"language-text\">npm-audit</code></a> for details on what is sent.</p>\n<p>See <a href=\"/using-npm/config\"><code class=\"language-text\">config</code></a>. Many of the configuration params have some\neffect on installation, since that's most of what npm does.</p>\n<h4 id=\"algorithm\" style=\"position:relative;\"><a href=\"#algorithm\" aria-label=\"algorithm permalink\" class=\"header-link-class before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Algorithm</h4>\n<p>To install a package, npm uses the following algorithm:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">load the existing node_modules tree from disk\nclone the tree\nfetch the package.json and assorted metadata and <span class=\"token function\">add</span> it to the clone\nwalk the clone and <span class=\"token function\">add</span> any missing dependencies\n  dependencies will be added as close to the <span class=\"token function\">top</span> as is possible\n  without breaking any other modules\ncompare the original tree with the cloned tree and <span class=\"token function\">make</span> a list of\nactions to take to convert one to the other\nexecute all of the actions, deepest first\n  kinds of actions are install, update, remove and move</code></pre></div>\n<p>For this <code class=\"language-text\">package{dep}</code> structure: <code class=\"language-text\">A{B,C}, B{C}, C{D}</code>,\nthis algorithm produces:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">A\n+-- B\n+-- C\n+-- D</code></pre></div>\n<p>That is, the dependency from B to C is satisfied by the fact that A\nalready caused C to be installed at a higher level. D is still installed\nat the top level because nothing conflicts with it.</p>\n<p>For <code class=\"language-text\">A{B,C}, B{C,D@1}, C{D@2}</code>, this algorithm produces:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">A\n+-- B\n+-- C\n   `-- D@2\n+-- D@1</code></pre></div>\n<p>Because B's D@1 will be installed in the top level, C now has to install D@2\nprivately for itself. This algorithm is deterministic, but different trees may\nbe produced if two dependencies are requested for installation in a different\norder.</p>\n<p>See <a href=\"/configuring-npm/folders\">folders</a> for a more detailed description of the specific folder structures that npm creates.</p>\n<h3 id=\"limitations-of-npms-install-algorithm\" style=\"position:relative;\"><a href=\"#limitations-of-npms-install-algorithm\" aria-label=\"limitations of npms install algorithm permalink\" class=\"header-link-class before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Limitations of npm's Install Algorithm</h3>\n<p>npm will refuse to install any package with an identical name to the\ncurrent package. This can be overridden with the <code class=\"language-text\">--force</code> flag, but in\nmost cases can simply be addressed by changing the local package name.</p>\n<p>There are some very rare and pathological edge-cases where a cycle can\ncause npm to try to install a never-ending tree of packages. Here is\nthe simplest case:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">A -<span class=\"token operator\">></span> B -<span class=\"token operator\">></span> A<span class=\"token string\">' -> B'</span> -<span class=\"token operator\">></span> A -<span class=\"token operator\">></span> B -<span class=\"token operator\">></span> A<span class=\"token string\">' -> B'</span> -<span class=\"token operator\">></span> A -<span class=\"token operator\">></span> <span class=\"token punctuation\">..</span>.</code></pre></div>\n<p>where <code class=\"language-text\">A</code> is some version of a package, and <code class=\"language-text\">A&#39;</code> is a different version\nof the same package. Because <code class=\"language-text\">B</code> depends on a different version of <code class=\"language-text\">A</code>\nthan the one that is already in the tree, it must install a separate\ncopy. The same is true of <code class=\"language-text\">A&#39;</code>, which must install <code class=\"language-text\">B&#39;</code>. Because <code class=\"language-text\">B&#39;</code>\ndepends on the original version of <code class=\"language-text\">A</code>, which has been overridden, the\ncycle falls into infinite regress.</p>\n<p>To avoid this situation, npm flat-out refuses to install any\n<code class=\"language-text\">name@version</code> that is already present anywhere in the tree of package\nfolder ancestors. A more correct, but more complex, solution would be\nto symlink the existing version into the new location. If this ever\naffects a real use-case, it will be investigated.</p>\n<h3 id=\"see-also\" style=\"position:relative;\"><a href=\"#see-also\" aria-label=\"see also permalink\" class=\"header-link-class before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>See Also</h3>\n<ul>\n<li><a href=\"/configuring-npm/folders\">npm folders</a></li>\n<li><a href=\"/cli-commands/npm-update\">npm update</a></li>\n<li><a href=\"/cli-commands/npm-audit\">npm audit</a></li>\n<li><a href=\"/cli-commands/npm-fund\">npm fund</a></li>\n<li><a href=\"/cli-commands/npm-link\">npm link</a></li>\n<li><a href=\"/cli-commands/npm-rebuild\">npm rebuild</a></li>\n<li><a href=\"/using-npm/scripts\">npm scripts</a></li>\n<li><a href=\"/cli-commands/npm-build\">npm build</a></li>\n<li><a href=\"/cli-commands/npm-config\">npm config</a></li>\n<li><a href=\"/configuring-npm/npmrc\">npmrc</a></li>\n<li><a href=\"/using-npm/registry\">npm registry</a></li>\n<li><a href=\"/cli-commands/npm-dist-tag\">npm dist-tag</a></li>\n<li><a href=\"/cli-commands/npm-uninstall\">npm uninstall</a></li>\n<li><a href=\"/cli-commands/npm-shrinkwrap\">npm shrinkwrap</a></li>\n<li><a href=\"/configuring-npm/package-json\">package.json</a></li>\n</ul>"
}
